version: "3.9"
services:
  db:
    image: mongo:4
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=PS2AlertMe
    expose:
      - 27017
    volumes:
      - db-data:/data/db
      - ./backend/config/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
    restart: always
  rabbitmq:
    image: rabbitmq:3.8-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    expose:
      - 5672
    restart: unless-stopped
  publisher:
    build:
      context: ./backend
      dockerfile: $PWD/backend/publisher/Dockerfile
    image: publisher:1
    container_name: publisher
    environment:
      - RABBIT_CONNECTION_URI=${RABBIT_CONNECTION_URI}
      - SERVICEID=${SERVICEID}
    depends_on:
      - rabbitmq
    restart: unless-stopped
  consumer:
    build:
      context: ./backend
      dockerfile: $PWD/backend/consumer/Dockerfile
    image: consumer:1
    container_name: consumer
    environment:
      - PUBLICVAPIDKEY=${PUBLICVAPIDKEY}
      - PRIVATEVAPIDKEY=${PRIVATEVAPIDKEY}
      - CONTACTEMAIL=${CONTACTEMAIL}
      - RABBIT_CONNECTION_URI=${RABBIT_CONNECTION_URI}
      - MONGO_CONNECTION_URI=${MONGO_CONNECTION_URI}
    depends_on:
      - rabbitmq
      - db
    restart: unless-stopped
  PS2AlertMe:
    build:
      context: .
      dockerfile: Dockerfile
    image: ps2alertme:1
    container_name: PS2AlertMe
    environment:
      - MONGO_CONNECTION_URI=${MONGO_CONNECTION_URI}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - NODE_ENV=development
    ports:
      - 8080:8080
    depends_on:
      - db
    restart: unless-stopped

volumes:
  db-data:
